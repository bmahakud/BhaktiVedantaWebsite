# Generated by Django 3.2.7 on 2023-07-02 09:48

import account.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('startDate', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('endDate', models.DateField(blank=True, default=datetime.date.today, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('careof', models.CharField(blank=True, max_length=200, null=True)),
                ('houseno', models.CharField(blank=True, max_length=100, null=True)),
                ('streetno', models.CharField(blank=True, max_length=200, null=True)),
                ('placename', models.CharField(blank=True, max_length=200, null=True)),
                ('postoffice', models.CharField(blank=True, max_length=200, null=True)),
                ('district', models.CharField(blank=True, max_length=200, null=True)),
                ('policestn', models.CharField(blank=True, max_length=200, null=True)),
                ('pincode', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('addressType', models.CharField(blank=True, choices=[('present', 'PRESENT'), ('permanent', 'PERMANENT')], default='present', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('doc', models.FileField(blank=True, max_length=255, null=True, upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='DegreeName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentCopy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('doc', models.FileField(blank=True, max_length=255, null=True, upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='FutureCustomerContacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=100)),
                ('message', models.CharField(max_length=1000)),
                ('postdate', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('city', models.CharField(blank=True, max_length=300, null=True)),
                ('state', models.CharField(blank=True, max_length=300, null=True)),
                ('country', models.CharField(blank=True, max_length=300, null=True)),
                ('instlogo', models.ImageField(blank=True, default=account.models.get_default_institute_logo, max_length=255, null=True, upload_to='images/')),
                ('dummy', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], default='no', max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MarkSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('doc', models.FileField(blank=True, max_length=255, null=True, upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='Subscribers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=100)),
                ('postdate', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='UsefullLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('link', models.CharField(blank=True, max_length=1000, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('creationDateTime', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ('creationDateTime',),
            },
        ),
        migrations.CreateModel(
            name='UserTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EduDegree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDate', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('endDate', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('certificates', models.ManyToManyField(blank=True, default=None, to='account.Certificate')),
                ('degreename', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.degreename')),
                ('institute', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.institute')),
                ('marksheets', models.ManyToManyField(blank=True, default=None, to='account.MarkSheet')),
            ],
            options={
                'ordering': ('startDate',),
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('firstname', models.CharField(blank=True, default='', max_length=20, verbose_name='firstname')),
                ('lastname', models.CharField(blank=True, default='', max_length=20, verbose_name='lastname')),
                ('email', models.EmailField(blank=True, default=None, max_length=60, null=True, verbose_name='email')),
                ('username', models.CharField(max_length=200, unique=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('profile_image', models.ImageField(blank=True, default=account.models.get_default_profile_image, max_length=255, null=True, upload_to='images/')),
                ('hide_email', models.BooleanField(default=True)),
                ('registrationid', models.CharField(default='', max_length=60, verbose_name='regid')),
                ('gender', models.CharField(blank=True, default='', max_length=20, verbose_name='gender')),
                ('position', models.CharField(blank=True, default='', max_length=20, verbose_name='position')),
                ('dateofbirth', models.DateField(default=datetime.date.today, max_length=8, verbose_name='dob')),
                ('institute', models.CharField(blank=True, default='', max_length=20, verbose_name='institute')),
                ('city', models.CharField(blank=True, default='', max_length=20, verbose_name='city')),
                ('state', models.CharField(blank=True, default='', max_length=20, verbose_name='state')),
                ('country', models.CharField(blank=True, default='', max_length=20, verbose_name='country')),
                ('officeId_doc', models.FileField(blank=True, max_length=1055, null=True, upload_to='images/')),
                ('govtId1_doc', models.FileField(blank=True, max_length=1055, null=True, upload_to='images/')),
                ('govtId2_doc', models.FileField(blank=True, max_length=1055, null=True, upload_to='images/')),
                ('dobCert_doc', models.FileField(blank=True, max_length=1055, null=True, upload_to='images/')),
                ('achievements', models.ManyToManyField(blank=True, to='account.Achievements')),
                ('addresses', models.ManyToManyField(blank=True, to='account.Address')),
                ('contacts', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('educationDegrees', models.ManyToManyField(blank=True, to='account.EduDegree')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('usefull_links', models.ManyToManyField(blank=True, to='account.UsefullLink')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('usertitle', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.usertitle')),
                ('usertype', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.usertype')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
